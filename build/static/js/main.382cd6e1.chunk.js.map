{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Header","className","to","src","alt","href","target","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","event","setState","clearTimeout","setTimeout","callback","icon","size","type","placeholder","onChange","this","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","clickable","pathname","movieId","movieName","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPage","searchTerm","searchItems","console","log","endpoint","fetchItems","fetch","then","res","json","data","results","page","total_pages","loadMoreItems","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","background_path","min","max","optimum","low","high","vote_average","directors","length","name","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","resp","crew","filter","member","job","cast","catch","error","location","runtime","NotFound","library","add","fab","faSearch","faClock","faTicketAlt","faMoneyBill","faFilm","App","Fragment","path","component","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.382cd6e1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"rmdb-header\">\r\n            <div className=\"rmdb-header-content\">\r\n                <Link to=\"/\">\r\n                    <img className=\"rmdb-logo\" src=\"./images/movieBox_logo.png\" alt=\"moviebox-logo\" />\r\n                </Link>\r\n                <a href=\"https://www.themoviedb.org/\" target=\"_blank\">\r\n                     <img className=\"rmdb-tmdb-logo\" src=\"./images/tmdb_logo.png\" alt=\"tmdb-logo\" /> \r\n                </a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '538dd569d967ed5ea65b71b4452237c8';\n\n\n\n// 019e8f375549e0bbd4a4191862ebc88f\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280'\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500'\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from 'react';\r\nimport './HeroImage.css';\r\n\r\n\r\nconst HeroImage = (props) => {\r\n    return (\r\n        <div className=\"rmdb-heroimage\"\r\n            style={{\r\n                background: `url('${props.image}'), #1c1c1c`\r\n            }}\r\n        >\r\n            <div className=\"rmdb-heroimage-content\">\r\n                <div className=\"rmdb-heroimage-text\">\r\n                    <h1>{props.title}</h1>\r\n                    <p>{props.text}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HeroImage;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport './SearchBar.css'\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        value: ''\r\n    }\r\n    timeout = null;\r\n\r\n    doSearch = (event) => {\r\n        this.setState({\r\n            value: event.target.value\r\n        });\r\n        clearTimeout(this.timeout);\r\n\r\n        this.timeout = setTimeout(() => {\r\n            this.props.callback(this.state.value)\r\n        }, 500);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"rmdb-searchbar\">\r\n                <div className=\"rmdb-searchbar-content\">\r\n                <FontAwesomeIcon icon=\"search\" className=\"rmdb-fa-search\" size=\"2x\" />\r\n                    <input \r\n                    type=\"text\" \r\n                    className=\"rmdb-searchbar-input\" \r\n                    placeholder=\"Search\" \r\n                    onChange={this.doSearch}\r\n                    value={this.state.value}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default SearchBar","import React from 'react';\r\nimport './FourColGrid.css';\r\nimport { render } from '@testing-library/react';\r\n\r\nconst FourColGrid = (props) => {\r\n    const renderElements = () => {\r\n        const gridElements = props.children.map((element, i) => {\r\n            return (\r\n                <div key={i} className=\"rmdb-grid-element\">\r\n                    {element}\r\n                </div>\r\n            )\r\n        })\r\n        return gridElements;\r\n    }\r\n    return (\r\n        <div className=\"rmdb-grid\">\r\n            {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n            <div className=\"rmdb-grid-content\">\r\n                {renderElements()}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FourColGrid;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MovieThumb.css';\r\n\r\nconst MovieThumb = (props) => {\r\n    return (\r\n        <div className=\"rmdb-moviethumb\">\r\n            {props.clickable ? \r\n                <Link to={{ pathname: `/${props.movieId}`, movieName: `${props.movieName}` }}>\r\n                    <img src={props.image} alt=\"moviethumb\" />\r\n                </Link>\r\n                :\r\n                <img src={props.image} alt=\"moviethumb\" />\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieThumb;","import React from 'react';\r\nimport './LoadMoreBtn.css';\r\n\r\nconst LoadMoreBtn = (props) => {\r\n\r\n    return (\r\n        <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoadMoreBtn;\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css'\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        movies: [],\r\n        heroImage: null,\r\n        loading: false,\r\n        currentPage: 0,\r\n        totalPage: 0,\r\n        searchTerm: ''\r\n    }\r\n    //LifeCycle Methods\r\n    componentDidMount() {\r\n        this.setState({ loading: true });\r\n        const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n\r\n        this.fetchItems(endpoint);\r\n    }\r\n    //Functions\r\n    searchItems = (searchTerm) => {\r\n        console.log(searchTerm)\r\n        let endpoint = '';\r\n        this.setState({\r\n            movies: [],\r\n            loading: true,\r\n            searchTerm\r\n        })\r\n\r\n        if(searchTerm ==='') {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n        }else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n        }\r\n        this.fetchItems(endpoint)\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                this.setState({\r\n                    movies: [...this.state.movies, ...data.results],\r\n                    heroImage: this.state.heroImage || data.results[0],\r\n                    loading: false,\r\n                    currentPage: data.page,\r\n                    totalPage: data.total_pages\r\n                })\r\n            })\r\n    }\r\n\r\n    loadMoreItems = () => {\r\n        let endpoint = '';\r\n        this.setState({ loading: true })\r\n\r\n        if (this.state.searchTerm === '') {\r\n            endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${this.state.currentPage + 1}`;\r\n        } else {\r\n            endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}&page=${this.state.currentPage + 1}`;\r\n        }\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-home\">\r\n                {this.state.heroImage ?\r\n                    <div>\r\n                        <HeroImage\r\n                            image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n                            title={this.state.heroImage.original_title}\r\n                            text={this.state.heroImage.overview}\r\n                        />\r\n                        <SearchBar callback={this.searchItems} />\r\n                    </div> : null}\r\n                \r\n                <div className=\"rmdb-home-grid\">\r\n                    <FourColGrid \r\n                        header={this.state.searchTerm ? 'Search Result' : 'Popular Movies'}\r\n                        loading={this.state.loading}\r\n                    >\r\n                        {this.state.movies.map((element, i) => {\r\n                            return <MovieThumb\r\n                                    key={i}\r\n                                    clickable={true}\r\n                                    image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}`: './images/no_image.jpg'}\r\n                                    movieId={element.id}\r\n                                    movieName={element.original_title}\r\n                                    />\r\n                        })}\r\n\r\n                    </FourColGrid>\r\n                </div>\r\n                {this.state.loading ? <Spinner /> : null}\r\n                {this.state.currentPage <= this.state.totalPage && !this.state.loading ?\r\n                    <LoadMoreBtn \r\n                        text=\"Load More\"\r\n                        onClick={this.loadMoreItems}\r\n                    /> \r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navigation.css';\r\n\r\nconst Navigation = (props) => {\r\n    return (\r\n        <div className=\"rmdb-navigation\">\r\n            <div className=\"rmdb-navigation-content\">\r\n                <Link to=\"/\">\r\n                    <p>Home</p>\r\n                </Link>\r\n                <p>/</p>\r\n                <p>{props.movie}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../../config';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport MovieThumb from '../MovieThumb/MovieThumb';\r\nimport './MovieInfo.css';\r\n\r\nconst MovieInfo = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfo\"\r\n            style={{\r\n                background: props.movie.background_path ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${props.movie.background_path}')` : '#000000'\r\n            }}\r\n        >\r\n            <div className=\"rmdb-movieinfo-content\">\r\n                <div className=\"rmdb-movieinfo-thumb\">\r\n                    <MovieThumb\r\n                        image={props.movie.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}` : './images/no_image.jpg'}\r\n                        clickable={false}\r\n                    />\r\n                </div>\r\n                <div className=\"rmdb-movieinfo-text\">\r\n                    <h1>{props.movie.title}</h1>\r\n                    <h3>PLOT</h3>\r\n                    <p>{props.movie.overview}</p>\r\n                    <h3>IMDB RATING</h3>\r\n                    <div className=\"rmdb-rating\">\r\n                        <meter min=\"0\" max=\"100\" optimum=\"100\" low=\"40\" high=\"70\" value={props.movie.vote_average * 10}></meter>\r\n                        <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n                    </div>\r\n                    {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n                    {\r\n                        props.directors.map((element, i) => {\r\n                        return <p key={i} className=\"rmdb-director\">{element.name}</p>\r\n                        })\r\n                    }\r\n                </div>\r\n                <FontAwesomeIcon className=\"fa-film\" icon=\"film\" size=\"5x\"/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfo;","//Covert time to hours and minutes\r\nexport const calcTime = (time) => {\r\n    const hours = Math.floor(time / 60);\r\n    const mins = time % 60;\r\n    return `${hours}h ${mins}m`;\r\n}\r\n\r\n//Convert a number to $ format\r\nexport const convertMoney = (money) => {\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 0,\r\n    });\r\n    return formatter.format(money);\r\n}","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { calcTime, convertMoney } from '../../../helpers.js';\r\nimport './MovieInfoBar.css';\r\n\r\nconst MovieInfoBar = (props) => {\r\n    return (\r\n        <div className=\"rmdb-movieinfobar\">\r\n            <div className=\"rmdb-movieinfobar-content\">\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesomeIcon className=\"fa-time\" icon=\"clock\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Runnig TIme: {calcTime(props.time)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesomeIcon className=\"fa-budget\" icon=\"money-bill\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Budget: {convertMoney(props.budget)}</span>\r\n                </div>\r\n                <div className=\"rmdb-movieinfobar-content-col\">\r\n                    <FontAwesomeIcon className=\"fa-revenue\" icon=\"ticket-alt\" size=\"2x\" />\r\n                    <span className=\"rmdb-movieinfobar-info\">Revenue: {convertMoney(props.revenue)}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieInfoBar;\r\n","import React from 'react';\r\nimport {IMAGE_BASE_URL} from '../../../config';\r\nimport './Actor.css';\r\n\r\nconst Actor = (props) => {\r\n    const POSTER_SIZE = \"w154\";\r\n\r\n    return (\r\n        <div className=\"rmdb-actor\">\r\n            <img\r\n                src={props.actor.profile_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}` : './images/no_image.jpg'}\r\n                alt=\"actorthumbs\"\r\n            />\r\n            <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n    <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Actor;","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY } from '../../config';\r\nimport Navigation from '../elements/Navigation/Navigation'\r\nimport MovieInfo from '../elements/MovieInfo/MovieInfo';\r\nimport MovieInfoBar from '../elements/MovieInfoBar/MovieInfoBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport Actor from '../elements/Actor/Actor';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Movie.css';\r\n\r\n\r\nclass Movie extends Component {\r\n    state = {\r\n        movie: null,\r\n        actors: null,\r\n        directors: [],\r\n        loading: false\r\n    }\r\n    componentDidMount() {\r\n        this.setState({ loading: true })\r\n        //first fetch the movie\r\n        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n        this.fetchItems(endpoint);\r\n    }\r\n\r\n    fetchItems = (endpoint) => {\r\n        fetch(endpoint)\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                if (data.status_code) {\r\n                    this.setState({ loading: false });\r\n                } else {\r\n                    console.log(data)\r\n                    this.setState({ movie: data }, () => {\r\n                        // .. then fetch actors in the set state callback function\r\n                        const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n                        fetch(endpoint)\r\n                            .then(resp => resp.json())\r\n                            .then(data => {\r\n                                console.log(data)\r\n                                const directors = data.crew.filter((member) => member.job === 'Director')\r\n\r\n                                this.setState({\r\n                                    actors: data.cast.length > 1 ? data.cast : null,\r\n                                    directors,\r\n                                    loading: false\r\n                                });\r\n                                console.log(this.state.actors)\r\n                            })\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => console.log(error));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rmdb-movie\">\r\n                {this.state.movie ?\r\n                    <div>\r\n                        <Navigation movie={this.props.location.movieName} />\r\n                        <MovieInfo movie={this.state.movie}\r\n                            directors={this.state.directors} />\r\n                        <MovieInfoBar time={this.state.movie.runtime}\r\n                            budget={this.state.movie.budget}\r\n                            revenue={this.state.movie.revenue} />\r\n                    </div>\r\n                    : null\r\n                }\r\n                {this.state.actors ?\r\n                    <div className=\"rmdb-movie-grid\">\r\n                        <FourColGrid header={'Actors'}>\r\n                            {this.state.actors.map((element, i) => {\r\n                                return <Actor key={i} actor={element} />\r\n                            })}\r\n                        </FourColGrid>\r\n                    </div>\r\n                    :null\r\n                }\r\n                {console.log(this.state.loading)}\r\n                {!this.state.actors && !this.state.loading ? <h1>No Movie Found!</h1> : null}\r\n                {this.state.loading ? <Spinner /> : null}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport './NotFound.css';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <div className=\"rmdb-notfound\">\r\n            <h1>\r\n                Whooooops. This page doesn't exist\r\n            </h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport Header from '../elements/Header/Header';\r\nimport Home from '../Home/Home';\r\nimport Movie from '../Movie/Movie';\r\nimport NotFound from '../elements/NotFound/NotFound';\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'\r\nimport { faSearch, faClock, faTicketAlt, faMoneyBill, faFilm } from '@fortawesome/free-solid-svg-icons'\r\nlibrary.add(fab, faSearch, faClock, faTicketAlt, faMoneyBill, faFilm)\r\n\r\nconst App = () => {\r\n    return(\r\n       <BrowserRouter>\r\n            <React.Fragment>\r\n                <Header />\r\n                <Switch>\r\n                    <Route path='/' component={Home} exact />\r\n                    <Route path=\"/:movieId\" component={Movie} exact />\r\n                    <Route component={NotFound} />\r\n                </Switch>\r\n            </React.Fragment>\r\n       </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}